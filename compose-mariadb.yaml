services:
  php:
    container_name: php
    build:
      context: .container
      dockerfile: Dockerfile
      args:
        USER: ${USER:-user}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        ENVIRONMENT: ${APP_ENV:-production}
    restart: always
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      - ./api:/app
      - caddy_data:/data
      - caddy_config:/config
    tty: true
    networks:
      - network

  mariadb:
    container_name: mariadb
    image: mariadb:latest
    restart: unless-stopped
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./data/mariadb:/var/lib/mariadb
    environment:
      MARIADB_HOST: ${DB_HOST}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    networks:
      - network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT}:${PHPMYADMIN_PORT}"
    environment:
      PMA_HOST: mariadb
      PMA_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MEMORY_LIMIT: '-1'
      MAX_EXECUTION_TIME: 0
      APACHE_PORT: ${PHPMYADMIN_PORT}
      UPLOAD_LIMIT: '10G'
    depends_on:
      - mariadb
    networks:
      - network

  redis:
    container_name: redis
    image: valkey/valkey:alpine
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./data/redis:/data/redis
    networks:
      - network

networks:
  network:

volumes:
  caddy_data:
  caddy_config:
  data:
