services:
  php:
    container_name: php
    build:
      context: .container
      dockerfile: Dockerfile
      args:
        USER: ${USER:-user}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        ENVIRONMENT: ${APP_ENV:-production}
    restart: always
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      - ./api:/app
      - caddy_data:/data
      - caddy_config:/config
    tty: true
    networks:
      - network

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_PORT}"
    volumes:
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - network

  redis:
    container_name: redis
    image: valkey/valkey:alpine
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./data/redis:/data/redis
    networks:
      - network

networks:
  network:

volumes:
  caddy_data:
  caddy_config:
  data:
